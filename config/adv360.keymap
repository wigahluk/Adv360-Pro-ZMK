
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC  &kp N1  &kp N2  &kp N3       &kp N4   &kp N5            &kp LG(D)                                                                         &mo 3   &kp N6             &kp N7     &kp N8   &kp N9     &kp N0      &none
   &kp TAB   &kp Q   &kp W   &kp E        &kp R    &kp T               &kp UP                                                                      &kp LEFT    &kp Y              &kp U      &kp I    &kp O      &kp P      &none
     &none   &kp A   &kp S   &kp D  &mt LSHFT F    &kp G             &kp DOWN   &kp TAB  &kp LC(UP)                  &kp LC(LEFT)  &kp LC(RIGHT)  &kp RIGHT    &kp H  &mt RIGHT_SHIFT J      &kp K    &kp L   &kp SEMI      &none
 &kp LSHFT   &kp Z   &kp X   &kp C      &lt 4 V  &lt 1 B                                  &kp LCTRL                      &kp CAPS                            &lt 1 N            &lt 4 M  &kp COMMA  &kp DOT   &kp APOS  &kp RSHFT
     &mo 2   &mo 1   &none   &none        &mo 4                      &kp BSPC  &kp LALT    &kp LCMD                         &mo 5          &mo 5  &kp SPACE                       &mo 4      &none    &none  &kp SLASH  &kp ENTER
            >;
        };

        layer_keypad {
            bindings = <
 &trans     &trans        &trans     &trans    &trans     &trans            &trans                                                   &mo 3     &trans        &trans        &trans        &trans     &trans  &trans
 &trans     &kp N1        &kp N2     &kp N3    &kp N4     &kp N5             &none                                                   &none     &kp N6        &kp N7        &kp N8        &kp N9     &kp N0  &trans
 &trans  &kp SLASH  &kp ASTERISK  &kp MINUS  &kp PLUS  &kp EQUAL             &none  &trans  &trans                  &trans  &trans   &none  &kp EQUAL        &kp N4        &kp N5  &kp NUMBER_6   &kp PLUS  &trans
 &trans  &kp COMMA       &kp DOT  &kp UNDER    &trans     &trans                            &trans                  &trans                     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &trans
 &trans     &trans        &trans     &trans    &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                  &kp DOT  &kp NUMBER_0     &kp COMMA   &kp BSLH  &trans
            >;
        };

        layer_fn {
            bindings = <
 &trans   &trans   &trans  &trans  &trans        &trans             &trans                                                             &mo 3        &trans        &trans        &trans         &trans   &trans  &trans
 &trans   &kp F1   &kp F2  &kp F3  &kp F4        &kp F5              &none                                                             &none        &kp F6        &kp F7        &kp F8         &kp F9  &kp F10  &trans
 &trans  &kp F11  &kp F12  &trans  &trans  &kp C_BRI_UP              &none  &trans  &trans                  &kp C_PREV  &kp C_NEXT     &none  &kp C_VOL_UP  &kp LC(LEFT)    &kp LC(UP)  &kp LC(RIGHT)   &trans  &trans
 &trans   &trans   &trans  &trans  &trans  &kp C_BRI_DN                             &trans                      &trans                        &kp C_VOL_DN    &kp C_PREV  &kp LC(DOWN)     &kp C_NEXT   &trans  &trans
 &trans   &trans   &trans  &trans  &trans                          &kp DEL  &trans  &trans                      &trans      &trans  &kp C_PP                      &trans      &kp C_PP         &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                              &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                         &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                      &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none       &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_sym {
            bindings = <
 &trans    &trans  &trans    &trans    &trans         &trans            &trans                                                  &trans         &trans          &trans           &trans                &trans                 &trans  &trans
 &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT            &trans                                                  &trans      &kp CARET        &kp AMPS         &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
 &trans    &trans  &trans    &trans    &trans  &macro_barrow            &trans  &trans  &trans                  &trans  &trans  &trans   &macro_arrow  &kp LEFT_BRACE  &kp RIGHT_BRACE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &trans
 &trans    &trans  &trans    &trans    &trans         &trans                            &trans                  &trans                  &macro_darrow          &trans           &trans                &trans              &kp TILDE  &trans
 &trans    &trans  &trans    &trans    &trans                           &trans  &trans  &trans                  &trans  &trans  &trans                         &trans           &trans                &trans               &kp PIPE  &trans
            >;
        };

        layer_nav {
            bindings = <
 &trans            &trans            &trans        &trans             &trans             &trans                  &trans                                                                               &trans         &trans                &trans     &trans          &kp LS(LG(O))  &kp LS(LG(P))  &trans
 &trans            &trans            &trans    &kp LA(F7)             &trans             &trans              &kp LS(UP)                                                                          &kp PAGE_UP       &kp HOME  &kp LG(LEFT_BRACKET)  &kp LG(B)  &kp LG(RIGHT_BRACKET)        &kp END  &trans
 &trans  &kp LS(LG(LEFT))  &kp LS(LA(LEFT))    &kp LA(UP)  &kp LS(LA(RIGHT))  &kp LS(LG(RIGHT))            &kp LS(DOWN)  &kp LS(TAB)  &trans                  &kp LG(F12)  &kp LC(LS(LG(N4)))  &kp PAGE_DOWN   &kp LG(LEFT)          &kp LA(LEFT)     &kp UP          &kp LA(RIGHT)  &kp LG(RIGHT)  &trans
 &trans            &trans      &kp LS(LEFT)  &kp LA(DOWN)      &kp LS(RIGHT)         &kp LS(F6)                                       &trans                       &trans                                     &kp LA(ENTER)              &kp LEFT   &kp DOWN              &kp RIGHT         &trans  &trans
 &trans            &trans            &trans        &trans             &trans                               &kp LA(BSPC)      &kp DEL  &trans                       &trans              &trans         &trans                               &trans     &trans                 &trans         &trans  &trans
            >;
        };

    };
};
