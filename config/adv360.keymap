
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC  &kp N1  &kp N2  &kp N3            &kp N4    &kp N5               &kp LG(D)             &mo 3            &kp N6  &kp N7     &kp N8        &kp N9          &kp N0            &none
   &kp TAB   &kp Q   &kp W   &kp E             &kp R     &kp T                   &none             &none             &kp Y   &kp U      &kp I         &kp O           &kp P        &kp SLASH
     &mo 1   &kp A   &kp S   &kp D  &mt LEFT_SHIFT F     &kp G                   &mo 2           &kp ESC  &kp LC(UP_ARROW)                     &kp LC(LEFT)   &kp LC(RIGHT)            &mo 2     &kp H  &mt RIGHT_SHIFT J      &kp K    &kp L  &kp SEMICOLON  &lt 5 SINGLE_QUOTE
 &kp LSHFT   &kp Z   &kp X   &kp C             &kp V     &kp B                   &none             &none  &kp LEFT_CONTROL   &none      &none    &kp RSHIFT           &none            &none     &kp N              &kp M  &kp COMMA  &kp DOT         &kp UP               &none
     &none   &none   &none   &none             &mo 4  &kp BSPC            &kp LEFT_ALT  &kp LEFT_COMMAND             &mo 4   &mo 6  &kp SPACE         &mo 4  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp DOWN          &kp ENTER
            >;
        };

        layer_Fnc {
            bindings = <
 &trans   &trans   &trans      &trans  &trans        &trans            &trans   &mo 3  &trans            &trans     &trans      &trans      &trans            &trans
 &trans   &kp F1   &kp F2      &kp F3  &kp F4        &kp F5             &none   &none  &kp F6            &kp F7     &kp F8      &kp F9     &kp F10  &kp C_PLAY_PAUSE
 &trans  &kp F11  &kp F12      &trans  &trans  &kp C_BRI_UP             &none  &trans  &trans                               &kp C_PREV  &kp C_NEXT             &none  &kp C_VOL_UP  &kp LC(LEFT_ARROW)    &kp LC(UP)  &kp LC(RIGHT_ARROW)  &trans  &trans
 &trans   &trans   &trans  &caps_word  &trans  &kp C_BRI_DN             &none   &none  &trans             &none      &none      &trans       &none             &none  &kp C_VOL_DN          &kp C_PREV  &kp LC(DOWN)           &kp C_NEXT  &trans  &trans
 &trans   &trans   &trans    &kp CAPS  &trans       &kp DEL            &trans  &trans  &trans  &kp C_PLAY_PAUSE  &kp ENTER      &trans      &trans            &trans        &trans              &trans
            >;
        };

        layer_Nums {
            bindings = <
 &trans     &trans        &trans          &trans    &trans             &trans            &trans   &mo 3  &kp LS(F6)    &kp LA(F7)  &trans    &trans        &trans         &trans
 &trans     &kp N1  &kp NUMBER_2    &kp NUMBER_3    &kp N4             &kp N5             &none   &none      &kp N6  &kp NUMBER_7  &kp N8    &kp N9  &kp NUMBER_0  &kp BACKSLASH
 &trans  &kp SLASH      &kp STAR       &kp MINUS  &kp PLUS          &kp EQUAL             &none  &trans      &trans                        &kp HOME       &kp END          &none  &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &kp GRAVE
 &trans     &trans        &trans  &kp UNDERSCORE    &trans             &trans             &none   &none      &trans         &none   &none    &trans         &none          &none     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &trans
 &trans     &trans        &trans          &trans    &trans  &kp LA(BACKSPACE)            &trans  &trans      &trans        &trans  &trans    &trans  &kp NUMBER_0        &kp DOT     &trans        &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_sym_ {
            bindings = <
    &trans    &trans  &trans     &trans      &trans         &trans            &trans  &trans     &trans         &trans        &trans                &trans                 &trans              &trans
 &kp GRAVE  &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR    &kp PERCENT            &trans  &trans  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS            &kp PIPE
    &trans    &trans  &trans     &trans      &trans  &macro_barrow            &trans  &trans     &trans                                             &trans                 &trans  &kp RC(RG(LS(N4)))   &macro_arrow  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE
    &trans    &trans  &trans     &trans      &trans         &trans            &trans  &trans     &trans         &trans        &trans                &trans                 &trans              &trans  &macro_darrow          &trans           &trans            &trans             &trans     &trans
    &trans    &trans  &trans     &trans      &trans         &trans            &trans  &trans     &trans         &trans     &kp ENTER                &trans                 &trans              &trans         &trans          &trans
            >;
        };

        layer_term {
            bindings = <
 &trans     &trans     &trans    &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans     &trans    &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LC(A)  &kp RA(B)    &kp UP  &kp RA(F)  &kp LC(E)            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans     &trans  &kp DOWN     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans     &trans    &trans     &trans  &kp RC(W)            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_nav {
            bindings = <
 &trans                  &trans                  &trans        &trans                   &trans                   &trans              &trans      &trans    &trans                &trans     &trans                 &trans   &trans  &trans
 &trans                  &trans                  &trans    &kp LA(F7)                   &trans                   &trans              &trans      &trans  &kp HOME  &kp RG(LEFT_BRACKET)  &kp RG(B)  &kp RG(RIGHT_BRACKET)  &kp END  &trans
 &trans  &kp RS(LG(LEFT_ARROW))  &kp RS(LA(LEFT_ARROW))    &kp LA(UP)  &kp RS(LA(RIGHT_ARROW))  &kp RS(LG(RIGHT_ARROW))              &trans      &trans    &trans                                                  &trans   &trans  &trans  &kp RG(LEFT_ARROW)  &kp LA(LEFT_ARROW)    &kp UP  &kp LA(RIGHT_ARROW)  &kp RG(RIGHT_ARROW)  &trans
 &trans                  &trans      &kp RS(LEFT_ARROW)  &kp LA(DOWN)      &kp RS(RIGHT_ARROW)               &kp RS(F6)              &trans      &trans    &trans                &trans     &trans                 &trans   &trans  &trans       &kp LA(ENTER)            &kp LEFT  &kp DOWN            &kp RIGHT               &trans  &trans
 &trans                  &trans                  &trans        &trans                   &trans             &kp LA(BSPC)            &kp BSPC  &kp DELETE    &trans                &trans     &trans                 &trans   &trans  &trans              &trans              &trans
            >;
        };

        layer_Layer__7 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
